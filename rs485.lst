CCS PCH C Compiler, Version 5.008, 5967               03-dez-14 14:25

               Filename:   D:\Projetos\Modbus\rs485.lst

               ROM used:   2542 bytes (8%)
                           Largest free fragment is 30226
               RAM used:   14 (1%) at main() level
                           548 (36%) worst case
               Stack used: 2 locations
               Stack size: 31

*
0000:  GOTO   097A
.................... /* 
....................  * rs485.c 
....................  * 
....................  *  Created on: 27/11/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include <18F45K20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
....................  
.................... #list 
....................  
....................  
.................... #fuses HS 
....................  
.................... #use delay(clock=10MHz) 
*
0906:  CLRF   FEA
0908:  MOVLW  0E
090A:  MOVWF  FE9
090C:  MOVF   FEF,W
090E:  BZ    092C
0910:  MOVLW  03
0912:  MOVWF  01
0914:  CLRF   00
0916:  DECFSZ 00,F
0918:  BRA    0916
091A:  DECFSZ 01,F
091C:  BRA    0914
091E:  MOVLW  3C
0920:  MOVWF  00
0922:  DECFSZ 00,F
0924:  BRA    0922
0926:  BRA    0928
0928:  DECFSZ FEF,F
092A:  BRA    0910
092C:  GOTO   09D8 (RETURN)
.................... #use rs232(xmit=PIN_C6, rcv=PIN_c7, enable=PIN_C5, baud=19200) 
0930:  BCF    F94.5
0932:  BSF    F8B.5
0934:  BTFSS  F9E.4
0936:  BRA    0934
0938:  MOVFF  11,FAD
093C:  NOP   
093E:  BCF    F94.5
0940:  BSF    F8B.5
0942:  BTFSS  FAC.1
0944:  BRA    0942
0946:  BCF    F94.5
0948:  BCF    F8B.5
094A:  GOTO   096E (RETURN)
....................  
.................... #include "modbus.c" 
.................... /* 
....................  * modbus.c 
....................  * 
....................  *  Created on: 03/12/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #define read_coils					0x01 
.................... #define read_discrete_inputs		0x02 
.................... #define read_holding_registers		0x03 
.................... #define read_input_registers		0x04 
.................... #define write_single_coil			0x05 
.................... #define write_single_register		0x06 
.................... #define write_multiple_coils		0x0F 
.................... #define Write_multiple_registers	0x10 
....................  
.................... #define high	1 
.................... #define low		0 
....................  
.................... #define request_size	8 
....................  
.................... typedef struct req_str { 
.................... 	int addr; 
.................... 	int cmd; 
.................... 	long from; 
.................... 	long to; 
.................... 	long crc; 
.................... } req_type; 
....................  
.................... long CRC16(int *nData, long wLength) { 
*
07D2:  SETF   x22
07D4:  SETF   x21
.................... 	long wCRCTable[] = { 0X0000, 0XC0C1, 0XC181, 0X0140, 0XC301, 0X03C0, 0X0280, 
.................... 			0XC241, 0XC601, 0X06C0, 0X0780, 0XC741, 0X0500, 0XC5C1, 0XC481, 
.................... 			0X0440, 0XCC01, 0X0CC0, 0X0D80, 0XCD41, 0X0F00, 0XCFC1, 0XCE81, 
.................... 			0X0E40, 0X0A00, 0XCAC1, 0XCB81, 0X0B40, 0XC901, 0X09C0, 0X0880, 
.................... 			0XC841, 0XD801, 0X18C0, 0X1980, 0XD941, 0X1B00, 0XDBC1, 0XDA81, 
.................... 			0X1A40, 0X1E00, 0XDEC1, 0XDF81, 0X1F40, 0XDD01, 0X1DC0, 0X1C80, 
.................... 			0XDC41, 0X1400, 0XD4C1, 0XD581, 0X1540, 0XD701, 0X17C0, 0X1680, 
.................... 			0XD641, 0XD201, 0X12C0, 0X1380, 0XD341, 0X1100, 0XD1C1, 0XD081, 
.................... 			0X1040, 0XF001, 0X30C0, 0X3180, 0XF141, 0X3300, 0XF3C1, 0XF281, 
.................... 			0X3240, 0X3600, 0XF6C1, 0XF781, 0X3740, 0XF501, 0X35C0, 0X3480, 
.................... 			0XF441, 0X3C00, 0XFCC1, 0XFD81, 0X3D40, 0XFF01, 0X3FC0, 0X3E80, 
.................... 			0XFE41, 0XFA01, 0X3AC0, 0X3B80, 0XFB41, 0X3900, 0XF9C1, 0XF881, 
.................... 			0X3840, 0X2800, 0XE8C1, 0XE981, 0X2940, 0XEB01, 0X2BC0, 0X2A80, 
.................... 			0XEA41, 0XEE01, 0X2EC0, 0X2F80, 0XEF41, 0X2D00, 0XEDC1, 0XEC81, 
.................... 			0X2C40, 0XE401, 0X24C0, 0X2580, 0XE541, 0X2700, 0XE7C1, 0XE681, 
.................... 			0X2640, 0X2200, 0XE2C1, 0XE381, 0X2340, 0XE101, 0X21C0, 0X2080, 
.................... 			0XE041, 0XA001, 0X60C0, 0X6180, 0XA141, 0X6300, 0XA3C1, 0XA281, 
.................... 			0X6240, 0X6600, 0XA6C1, 0XA781, 0X6740, 0XA501, 0X65C0, 0X6480, 
.................... 			0XA441, 0X6C00, 0XACC1, 0XAD81, 0X6D40, 0XAF01, 0X6FC0, 0X6E80, 
.................... 			0XAE41, 0XAA01, 0X6AC0, 0X6B80, 0XAB41, 0X6900, 0XA9C1, 0XA881, 
.................... 			0X6840, 0X7800, 0XB8C1, 0XB981, 0X7940, 0XBB01, 0X7BC0, 0X7A80, 
.................... 			0XBA41, 0XBE01, 0X7EC0, 0X7F80, 0XBF41, 0X7D00, 0XBDC1, 0XBC81, 
.................... 			0X7C40, 0XB401, 0X74C0, 0X7580, 0XB541, 0X7700, 0XB7C1, 0XB681, 
.................... 			0X7640, 0X7200, 0XB2C1, 0XB381, 0X7340, 0XB101, 0X71C0, 0X7080, 
.................... 			0XB041, 0X5000, 0X90C1, 0X9181, 0X5140, 0X9301, 0X53C0, 0X5280, 
.................... 			0X9241, 0X9601, 0X56C0, 0X5780, 0X9741, 0X5500, 0X95C1, 0X9481, 
.................... 			0X5440, 0X9C01, 0X5CC0, 0X5D80, 0X9D41, 0X5F00, 0X9FC1, 0X9E81, 
.................... 			0X5E40, 0X5A00, 0X9AC1, 0X9B81, 0X5B40, 0X9901, 0X59C0, 0X5880, 
.................... 			0X9841, 0X8801, 0X48C0, 0X4980, 0X8941, 0X4B00, 0X8BC1, 0X8A81, 
.................... 			0X4A40, 0X4E00, 0X8EC1, 0X8F81, 0X4F40, 0X8D01, 0X4DC0, 0X4C80, 
.................... 			0X8C41, 0X4400, 0X84C1, 0X8581, 0X4540, 0X8701, 0X47C0, 0X4680, 
.................... 			0X8641, 0X8201, 0X42C0, 0X4380, 0X8341, 0X4100, 0X81C1, 0X8081, 
.................... 			0X4040 }; 
*
0018:  CLRF   20
001A:  CLRF   21
001C:  MOVLW  C1
001E:  MOVWF  22
0020:  MOVLW  C0
0022:  MOVWF  23
0024:  MOVLW  81
0026:  MOVWF  24
0028:  MOVLW  C1
002A:  MOVWF  25
002C:  MOVLW  40
002E:  MOVWF  26
0030:  MOVLW  01
0032:  MOVWF  27
0034:  MOVWF  28
0036:  MOVLW  C3
0038:  MOVWF  29
003A:  MOVLW  C0
003C:  MOVWF  2A
003E:  MOVLW  03
0040:  MOVWF  2B
0042:  MOVLW  80
0044:  MOVWF  2C
0046:  MOVLW  02
0048:  MOVWF  2D
004A:  MOVLW  41
004C:  MOVWF  2E
004E:  MOVLW  C2
0050:  MOVWF  2F
0052:  MOVLW  01
0054:  MOVWF  30
0056:  MOVLW  C6
0058:  MOVWF  31
005A:  MOVLW  C0
005C:  MOVWF  32
005E:  MOVLW  06
0060:  MOVWF  33
0062:  MOVLW  80
0064:  MOVWF  34
0066:  MOVLW  07
0068:  MOVWF  35
006A:  MOVLW  41
006C:  MOVWF  36
006E:  MOVLW  C7
0070:  MOVWF  37
0072:  CLRF   38
0074:  MOVLW  05
0076:  MOVWF  39
0078:  MOVLW  C1
007A:  MOVWF  3A
007C:  MOVLW  C5
007E:  MOVWF  3B
0080:  MOVLW  81
0082:  MOVWF  3C
0084:  MOVLW  C4
0086:  MOVWF  3D
0088:  MOVLW  40
008A:  MOVWF  3E
008C:  MOVLW  04
008E:  MOVWF  3F
0090:  MOVLW  01
0092:  MOVWF  40
0094:  MOVLW  CC
0096:  MOVWF  41
0098:  MOVLW  C0
009A:  MOVWF  42
009C:  MOVLW  0C
009E:  MOVWF  43
00A0:  MOVLW  80
00A2:  MOVWF  44
00A4:  MOVLW  0D
00A6:  MOVWF  45
00A8:  MOVLW  41
00AA:  MOVWF  46
00AC:  MOVLW  CD
00AE:  MOVWF  47
00B0:  CLRF   48
00B2:  MOVLW  0F
00B4:  MOVWF  49
00B6:  MOVLW  C1
00B8:  MOVWF  4A
00BA:  MOVLW  CF
00BC:  MOVWF  4B
00BE:  MOVLW  81
00C0:  MOVWF  4C
00C2:  MOVLW  CE
00C4:  MOVWF  4D
00C6:  MOVLW  40
00C8:  MOVWF  4E
00CA:  MOVLW  0E
00CC:  MOVWF  4F
00CE:  CLRF   50
00D0:  MOVLW  0A
00D2:  MOVWF  51
00D4:  MOVLW  C1
00D6:  MOVWF  52
00D8:  MOVLW  CA
00DA:  MOVWF  53
00DC:  MOVLW  81
00DE:  MOVWF  54
00E0:  MOVLW  CB
00E2:  MOVWF  55
00E4:  MOVLW  40
00E6:  MOVWF  56
00E8:  MOVLW  0B
00EA:  MOVWF  57
00EC:  MOVLW  01
00EE:  MOVWF  58
00F0:  MOVLW  C9
00F2:  MOVWF  59
00F4:  MOVLW  C0
00F6:  MOVWF  5A
00F8:  MOVLW  09
00FA:  MOVWF  5B
00FC:  MOVLW  80
00FE:  MOVWF  5C
0100:  MOVLW  08
0102:  MOVWF  5D
0104:  MOVLW  41
0106:  MOVWF  5E
0108:  MOVLW  C8
010A:  MOVWF  5F
010C:  MOVLW  01
010E:  MOVWF  x60
0110:  MOVLW  D8
0112:  MOVWF  x61
0114:  MOVLW  C0
0116:  MOVWF  x62
0118:  MOVLW  18
011A:  MOVWF  x63
011C:  MOVLW  80
011E:  MOVWF  x64
0120:  MOVLW  19
0122:  MOVWF  x65
0124:  MOVLW  41
0126:  MOVWF  x66
0128:  MOVLW  D9
012A:  MOVWF  x67
012C:  CLRF   x68
012E:  MOVLW  1B
0130:  MOVWF  x69
0132:  MOVLW  C1
0134:  MOVWF  x6A
0136:  MOVLW  DB
0138:  MOVWF  x6B
013A:  MOVLW  81
013C:  MOVWF  x6C
013E:  MOVLW  DA
0140:  MOVWF  x6D
0142:  MOVLW  40
0144:  MOVWF  x6E
0146:  MOVLW  1A
0148:  MOVWF  x6F
014A:  CLRF   x70
014C:  MOVLW  1E
014E:  MOVWF  x71
0150:  MOVLW  C1
0152:  MOVWF  x72
0154:  MOVLW  DE
0156:  MOVWF  x73
0158:  MOVLW  81
015A:  MOVWF  x74
015C:  MOVLW  DF
015E:  MOVWF  x75
0160:  MOVLW  40
0162:  MOVWF  x76
0164:  MOVLW  1F
0166:  MOVWF  x77
0168:  MOVLW  01
016A:  MOVWF  x78
016C:  MOVLW  DD
016E:  MOVWF  x79
0170:  MOVLW  C0
0172:  MOVWF  x7A
0174:  MOVLW  1D
0176:  MOVWF  x7B
0178:  MOVLW  80
017A:  MOVWF  x7C
017C:  MOVLW  1C
017E:  MOVWF  x7D
0180:  MOVLW  41
0182:  MOVWF  x7E
0184:  MOVLW  DC
0186:  MOVWF  x7F
0188:  CLRF   x80
018A:  MOVLW  14
018C:  MOVWF  x81
018E:  MOVLW  C1
0190:  MOVWF  x82
0192:  MOVLW  D4
0194:  MOVWF  x83
0196:  MOVLW  81
0198:  MOVWF  x84
019A:  MOVLW  D5
019C:  MOVWF  x85
019E:  MOVLW  40
01A0:  MOVWF  x86
01A2:  MOVLW  15
01A4:  MOVWF  x87
01A6:  MOVLW  01
01A8:  MOVWF  x88
01AA:  MOVLW  D7
01AC:  MOVWF  x89
01AE:  MOVLW  C0
01B0:  MOVWF  x8A
01B2:  MOVLW  17
01B4:  MOVWF  x8B
01B6:  MOVLW  80
01B8:  MOVWF  x8C
01BA:  MOVLW  16
01BC:  MOVWF  x8D
01BE:  MOVLW  41
01C0:  MOVWF  x8E
01C2:  MOVLW  D6
01C4:  MOVWF  x8F
01C6:  MOVLW  01
01C8:  MOVWF  x90
01CA:  MOVLW  D2
01CC:  MOVWF  x91
01CE:  MOVLW  C0
01D0:  MOVWF  x92
01D2:  MOVLW  12
01D4:  MOVWF  x93
01D6:  MOVLW  80
01D8:  MOVWF  x94
01DA:  MOVLW  13
01DC:  MOVWF  x95
01DE:  MOVLW  41
01E0:  MOVWF  x96
01E2:  MOVLW  D3
01E4:  MOVWF  x97
01E6:  CLRF   x98
01E8:  MOVLW  11
01EA:  MOVWF  x99
01EC:  MOVLW  C1
01EE:  MOVWF  x9A
01F0:  MOVLW  D1
01F2:  MOVWF  x9B
01F4:  MOVLW  81
01F6:  MOVWF  x9C
01F8:  MOVLW  D0
01FA:  MOVWF  x9D
01FC:  MOVLW  40
01FE:  MOVWF  x9E
0200:  MOVLW  10
0202:  MOVWF  x9F
0204:  MOVLW  01
0206:  MOVWF  xA0
0208:  MOVLW  F0
020A:  MOVWF  xA1
020C:  MOVLW  C0
020E:  MOVWF  xA2
0210:  MOVLW  30
0212:  MOVWF  xA3
0214:  MOVLW  80
0216:  MOVWF  xA4
0218:  MOVLW  31
021A:  MOVWF  xA5
021C:  MOVLW  41
021E:  MOVWF  xA6
0220:  MOVLW  F1
0222:  MOVWF  xA7
0224:  CLRF   xA8
0226:  MOVLW  33
0228:  MOVWF  xA9
022A:  MOVLW  C1
022C:  MOVWF  xAA
022E:  MOVLW  F3
0230:  MOVWF  xAB
0232:  MOVLW  81
0234:  MOVWF  xAC
0236:  MOVLW  F2
0238:  MOVWF  xAD
023A:  MOVLW  40
023C:  MOVWF  xAE
023E:  MOVLW  32
0240:  MOVWF  xAF
0242:  CLRF   xB0
0244:  MOVLW  36
0246:  MOVWF  xB1
0248:  MOVLW  C1
024A:  MOVWF  xB2
024C:  MOVLW  F6
024E:  MOVWF  xB3
0250:  MOVLW  81
0252:  MOVWF  xB4
0254:  MOVLW  F7
0256:  MOVWF  xB5
0258:  MOVLW  40
025A:  MOVWF  xB6
025C:  MOVLW  37
025E:  MOVWF  xB7
0260:  MOVLW  01
0262:  MOVWF  xB8
0264:  MOVLW  F5
0266:  MOVWF  xB9
0268:  MOVLW  C0
026A:  MOVWF  xBA
026C:  MOVLW  35
026E:  MOVWF  xBB
0270:  MOVLW  80
0272:  MOVWF  xBC
0274:  MOVLW  34
0276:  MOVWF  xBD
0278:  MOVLW  41
027A:  MOVWF  xBE
027C:  MOVLW  F4
027E:  MOVWF  xBF
0280:  CLRF   xC0
0282:  MOVLW  3C
0284:  MOVWF  xC1
0286:  MOVLW  C1
0288:  MOVWF  xC2
028A:  MOVLW  FC
028C:  MOVWF  xC3
028E:  MOVLW  81
0290:  MOVWF  xC4
0292:  MOVLW  FD
0294:  MOVWF  xC5
0296:  MOVLW  40
0298:  MOVWF  xC6
029A:  MOVLW  3D
029C:  MOVWF  xC7
029E:  MOVLW  01
02A0:  MOVWF  xC8
02A2:  SETF   xC9
02A4:  MOVLW  C0
02A6:  MOVWF  xCA
02A8:  MOVLW  3F
02AA:  MOVWF  xCB
02AC:  MOVLW  80
02AE:  MOVWF  xCC
02B0:  MOVLW  3E
02B2:  MOVWF  xCD
02B4:  MOVLW  41
02B6:  MOVWF  xCE
02B8:  MOVLW  FE
02BA:  MOVWF  xCF
02BC:  MOVLW  01
02BE:  MOVWF  xD0
02C0:  MOVLW  FA
02C2:  MOVWF  xD1
02C4:  MOVLW  C0
02C6:  MOVWF  xD2
02C8:  MOVLW  3A
02CA:  MOVWF  xD3
02CC:  MOVLW  80
02CE:  MOVWF  xD4
02D0:  MOVLW  3B
02D2:  MOVWF  xD5
02D4:  MOVLW  41
02D6:  MOVWF  xD6
02D8:  MOVLW  FB
02DA:  MOVWF  xD7
02DC:  CLRF   xD8
02DE:  MOVLW  39
02E0:  MOVWF  xD9
02E2:  MOVLW  C1
02E4:  MOVWF  xDA
02E6:  MOVLW  F9
02E8:  MOVWF  xDB
02EA:  MOVLW  81
02EC:  MOVWF  xDC
02EE:  MOVLW  F8
02F0:  MOVWF  xDD
02F2:  MOVLW  40
02F4:  MOVWF  xDE
02F6:  MOVLW  38
02F8:  MOVWF  xDF
02FA:  CLRF   xE0
02FC:  MOVLW  28
02FE:  MOVWF  xE1
0300:  MOVLW  C1
0302:  MOVWF  xE2
0304:  MOVLW  E8
0306:  MOVWF  xE3
0308:  MOVLW  81
030A:  MOVWF  xE4
030C:  MOVLW  E9
030E:  MOVWF  xE5
0310:  MOVLW  40
0312:  MOVWF  xE6
0314:  MOVLW  29
0316:  MOVWF  xE7
0318:  MOVLW  01
031A:  MOVWF  xE8
031C:  MOVLW  EB
031E:  MOVWF  xE9
0320:  MOVLW  C0
0322:  MOVWF  xEA
0324:  MOVLW  2B
0326:  MOVWF  xEB
0328:  MOVLW  80
032A:  MOVWF  xEC
032C:  MOVLW  2A
032E:  MOVWF  xED
0330:  MOVLW  41
0332:  MOVWF  xEE
0334:  MOVLW  EA
0336:  MOVWF  xEF
0338:  MOVLW  01
033A:  MOVWF  xF0
033C:  MOVLW  EE
033E:  MOVWF  xF1
0340:  MOVLW  C0
0342:  MOVWF  xF2
0344:  MOVLW  2E
0346:  MOVWF  xF3
0348:  MOVLW  80
034A:  MOVWF  xF4
034C:  MOVLW  2F
034E:  MOVWF  xF5
0350:  MOVLW  41
0352:  MOVWF  xF6
0354:  MOVLW  EF
0356:  MOVWF  xF7
0358:  CLRF   xF8
035A:  MOVLW  2D
035C:  MOVWF  xF9
035E:  MOVLW  C1
0360:  MOVWF  xFA
0362:  MOVLW  ED
0364:  MOVWF  xFB
0366:  MOVLW  81
0368:  MOVWF  xFC
036A:  MOVLW  EC
036C:  MOVWF  xFD
036E:  MOVLW  40
0370:  MOVWF  xFE
0372:  MOVLW  2C
0374:  MOVWF  xFF
0376:  MOVLW  01
0378:  MOVLB  1
037A:  MOVWF  x00
037C:  MOVLW  E4
037E:  MOVWF  x01
0380:  MOVLW  C0
0382:  MOVWF  x02
0384:  MOVLW  24
0386:  MOVWF  x03
0388:  MOVLW  80
038A:  MOVWF  x04
038C:  MOVLW  25
038E:  MOVWF  x05
0390:  MOVLW  41
0392:  MOVWF  x06
0394:  MOVLW  E5
0396:  MOVWF  x07
0398:  CLRF   x08
039A:  MOVLW  27
039C:  MOVWF  x09
039E:  MOVLW  C1
03A0:  MOVWF  x0A
03A2:  MOVLW  E7
03A4:  MOVWF  x0B
03A6:  MOVLW  81
03A8:  MOVWF  x0C
03AA:  MOVLW  E6
03AC:  MOVWF  x0D
03AE:  MOVLW  40
03B0:  MOVWF  x0E
03B2:  MOVLW  26
03B4:  MOVWF  x0F
03B6:  CLRF   x10
03B8:  MOVLW  22
03BA:  MOVWF  x11
03BC:  MOVLW  C1
03BE:  MOVWF  x12
03C0:  MOVLW  E2
03C2:  MOVWF  x13
03C4:  MOVLW  81
03C6:  MOVWF  x14
03C8:  MOVLW  E3
03CA:  MOVWF  x15
03CC:  MOVLW  40
03CE:  MOVWF  x16
03D0:  MOVLW  23
03D2:  MOVWF  x17
03D4:  MOVLW  01
03D6:  MOVWF  x18
03D8:  MOVLW  E1
03DA:  MOVWF  x19
03DC:  MOVLW  C0
03DE:  MOVWF  x1A
03E0:  MOVLW  21
03E2:  MOVWF  x1B
03E4:  MOVLW  80
03E6:  MOVWF  x1C
03E8:  MOVLW  20
03EA:  MOVWF  x1D
03EC:  MOVLW  41
03EE:  MOVWF  x1E
03F0:  MOVLW  E0
03F2:  MOVWF  x1F
03F4:  MOVLW  01
03F6:  MOVWF  x20
03F8:  MOVLW  A0
03FA:  MOVWF  x21
03FC:  MOVLW  C0
03FE:  MOVWF  x22
0400:  MOVLW  60
0402:  MOVWF  x23
0404:  MOVLW  80
0406:  MOVWF  x24
0408:  MOVLW  61
040A:  MOVWF  x25
040C:  MOVLW  41
040E:  MOVWF  x26
0410:  MOVLW  A1
0412:  MOVWF  x27
0414:  CLRF   x28
0416:  MOVLW  63
0418:  MOVWF  x29
041A:  MOVLW  C1
041C:  MOVWF  x2A
041E:  MOVLW  A3
0420:  MOVWF  x2B
0422:  MOVLW  81
0424:  MOVWF  x2C
0426:  MOVLW  A2
0428:  MOVWF  x2D
042A:  MOVLW  40
042C:  MOVWF  x2E
042E:  MOVLW  62
0430:  MOVWF  x2F
0432:  CLRF   x30
0434:  MOVLW  66
0436:  MOVWF  x31
0438:  MOVLW  C1
043A:  MOVWF  x32
043C:  MOVLW  A6
043E:  MOVWF  x33
0440:  MOVLW  81
0442:  MOVWF  x34
0444:  MOVLW  A7
0446:  MOVWF  x35
0448:  MOVLW  40
044A:  MOVWF  x36
044C:  MOVLW  67
044E:  MOVWF  x37
0450:  MOVLW  01
0452:  MOVWF  x38
0454:  MOVLW  A5
0456:  MOVWF  x39
0458:  MOVLW  C0
045A:  MOVWF  x3A
045C:  MOVLW  65
045E:  MOVWF  x3B
0460:  MOVLW  80
0462:  MOVWF  x3C
0464:  MOVLW  64
0466:  MOVWF  x3D
0468:  MOVLW  41
046A:  MOVWF  x3E
046C:  MOVLW  A4
046E:  MOVWF  x3F
0470:  CLRF   x40
0472:  MOVLW  6C
0474:  MOVWF  x41
0476:  MOVLW  C1
0478:  MOVWF  x42
047A:  MOVLW  AC
047C:  MOVWF  x43
047E:  MOVLW  81
0480:  MOVWF  x44
0482:  MOVLW  AD
0484:  MOVWF  x45
0486:  MOVLW  40
0488:  MOVWF  x46
048A:  MOVLW  6D
048C:  MOVWF  x47
048E:  MOVLW  01
0490:  MOVWF  x48
0492:  MOVLW  AF
0494:  MOVWF  x49
0496:  MOVLW  C0
0498:  MOVWF  x4A
049A:  MOVLW  6F
049C:  MOVWF  x4B
049E:  MOVLW  80
04A0:  MOVWF  x4C
04A2:  MOVLW  6E
04A4:  MOVWF  x4D
04A6:  MOVLW  41
04A8:  MOVWF  x4E
04AA:  MOVLW  AE
04AC:  MOVWF  x4F
04AE:  MOVLW  01
04B0:  MOVWF  x50
04B2:  MOVLW  AA
04B4:  MOVWF  x51
04B6:  MOVLW  C0
04B8:  MOVWF  x52
04BA:  MOVLW  6A
04BC:  MOVWF  x53
04BE:  MOVLW  80
04C0:  MOVWF  x54
04C2:  MOVLW  6B
04C4:  MOVWF  x55
04C6:  MOVLW  41
04C8:  MOVWF  x56
04CA:  MOVLW  AB
04CC:  MOVWF  x57
04CE:  CLRF   x58
04D0:  MOVLW  69
04D2:  MOVWF  x59
04D4:  MOVLW  C1
04D6:  MOVWF  x5A
04D8:  MOVLW  A9
04DA:  MOVWF  x5B
04DC:  MOVLW  81
04DE:  MOVWF  x5C
04E0:  MOVLW  A8
04E2:  MOVWF  x5D
04E4:  MOVLW  40
04E6:  MOVWF  x5E
04E8:  MOVLW  68
04EA:  MOVWF  x5F
04EC:  CLRF   x60
04EE:  MOVLW  78
04F0:  MOVWF  x61
04F2:  MOVLW  C1
04F4:  MOVWF  x62
04F6:  MOVLW  B8
04F8:  MOVWF  x63
04FA:  MOVLW  81
04FC:  MOVWF  x64
04FE:  MOVLW  B9
0500:  MOVWF  x65
0502:  MOVLW  40
0504:  MOVWF  x66
0506:  MOVLW  79
0508:  MOVWF  x67
050A:  MOVLW  01
050C:  MOVWF  x68
050E:  MOVLW  BB
0510:  MOVWF  x69
0512:  MOVLW  C0
0514:  MOVWF  x6A
0516:  MOVLW  7B
0518:  MOVWF  x6B
051A:  MOVLW  80
051C:  MOVWF  x6C
051E:  MOVLW  7A
0520:  MOVWF  x6D
0522:  MOVLW  41
0524:  MOVWF  x6E
0526:  MOVLW  BA
0528:  MOVWF  x6F
052A:  MOVLW  01
052C:  MOVWF  x70
052E:  MOVLW  BE
0530:  MOVWF  x71
0532:  MOVLW  C0
0534:  MOVWF  x72
0536:  MOVLW  7E
0538:  MOVWF  x73
053A:  MOVLW  80
053C:  MOVWF  x74
053E:  MOVLW  7F
0540:  MOVWF  x75
0542:  MOVLW  41
0544:  MOVWF  x76
0546:  MOVLW  BF
0548:  MOVWF  x77
054A:  CLRF   x78
054C:  MOVLW  7D
054E:  MOVWF  x79
0550:  MOVLW  C1
0552:  MOVWF  x7A
0554:  MOVLW  BD
0556:  MOVWF  x7B
0558:  MOVLW  81
055A:  MOVWF  x7C
055C:  MOVLW  BC
055E:  MOVWF  x7D
0560:  MOVLW  40
0562:  MOVWF  x7E
0564:  MOVLW  7C
0566:  MOVWF  x7F
0568:  MOVLW  01
056A:  MOVWF  x80
056C:  MOVLW  B4
056E:  MOVWF  x81
0570:  MOVLW  C0
0572:  MOVWF  x82
0574:  MOVLW  74
0576:  MOVWF  x83
0578:  MOVLW  80
057A:  MOVWF  x84
057C:  MOVLW  75
057E:  MOVWF  x85
0580:  MOVLW  41
0582:  MOVWF  x86
0584:  MOVLW  B5
0586:  MOVWF  x87
0588:  CLRF   x88
058A:  MOVLW  77
058C:  MOVWF  x89
058E:  MOVLW  C1
0590:  MOVWF  x8A
0592:  MOVLW  B7
0594:  MOVWF  x8B
0596:  MOVLW  81
0598:  MOVWF  x8C
059A:  MOVLW  B6
059C:  MOVWF  x8D
059E:  MOVLW  40
05A0:  MOVWF  x8E
05A2:  MOVLW  76
05A4:  MOVWF  x8F
05A6:  CLRF   x90
05A8:  MOVLW  72
05AA:  MOVWF  x91
05AC:  MOVLW  C1
05AE:  MOVWF  x92
05B0:  MOVLW  B2
05B2:  MOVWF  x93
05B4:  MOVLW  81
05B6:  MOVWF  x94
05B8:  MOVLW  B3
05BA:  MOVWF  x95
05BC:  MOVLW  40
05BE:  MOVWF  x96
05C0:  MOVLW  73
05C2:  MOVWF  x97
05C4:  MOVLW  01
05C6:  MOVWF  x98
05C8:  MOVLW  B1
05CA:  MOVWF  x99
05CC:  MOVLW  C0
05CE:  MOVWF  x9A
05D0:  MOVLW  71
05D2:  MOVWF  x9B
05D4:  MOVLW  80
05D6:  MOVWF  x9C
05D8:  MOVLW  70
05DA:  MOVWF  x9D
05DC:  MOVLW  41
05DE:  MOVWF  x9E
05E0:  MOVLW  B0
05E2:  MOVWF  x9F
05E4:  CLRF   xA0
05E6:  MOVLW  50
05E8:  MOVWF  xA1
05EA:  MOVLW  C1
05EC:  MOVWF  xA2
05EE:  MOVLW  90
05F0:  MOVWF  xA3
05F2:  MOVLW  81
05F4:  MOVWF  xA4
05F6:  MOVLW  91
05F8:  MOVWF  xA5
05FA:  MOVLW  40
05FC:  MOVWF  xA6
05FE:  MOVLW  51
0600:  MOVWF  xA7
0602:  MOVLW  01
0604:  MOVWF  xA8
0606:  MOVLW  93
0608:  MOVWF  xA9
060A:  MOVLW  C0
060C:  MOVWF  xAA
060E:  MOVLW  53
0610:  MOVWF  xAB
0612:  MOVLW  80
0614:  MOVWF  xAC
0616:  MOVLW  52
0618:  MOVWF  xAD
061A:  MOVLW  41
061C:  MOVWF  xAE
061E:  MOVLW  92
0620:  MOVWF  xAF
0622:  MOVLW  01
0624:  MOVWF  xB0
0626:  MOVLW  96
0628:  MOVWF  xB1
062A:  MOVLW  C0
062C:  MOVWF  xB2
062E:  MOVLW  56
0630:  MOVWF  xB3
0632:  MOVLW  80
0634:  MOVWF  xB4
0636:  MOVLW  57
0638:  MOVWF  xB5
063A:  MOVLW  41
063C:  MOVWF  xB6
063E:  MOVLW  97
0640:  MOVWF  xB7
0642:  CLRF   xB8
0644:  MOVLW  55
0646:  MOVWF  xB9
0648:  MOVLW  C1
064A:  MOVWF  xBA
064C:  MOVLW  95
064E:  MOVWF  xBB
0650:  MOVLW  81
0652:  MOVWF  xBC
0654:  MOVLW  94
0656:  MOVWF  xBD
0658:  MOVLW  40
065A:  MOVWF  xBE
065C:  MOVLW  54
065E:  MOVWF  xBF
0660:  MOVLW  01
0662:  MOVWF  xC0
0664:  MOVLW  9C
0666:  MOVWF  xC1
0668:  MOVLW  C0
066A:  MOVWF  xC2
066C:  MOVLW  5C
066E:  MOVWF  xC3
0670:  MOVLW  80
0672:  MOVWF  xC4
0674:  MOVLW  5D
0676:  MOVWF  xC5
0678:  MOVLW  41
067A:  MOVWF  xC6
067C:  MOVLW  9D
067E:  MOVWF  xC7
0680:  CLRF   xC8
0682:  MOVLW  5F
0684:  MOVWF  xC9
0686:  MOVLW  C1
0688:  MOVWF  xCA
068A:  MOVLW  9F
068C:  MOVWF  xCB
068E:  MOVLW  81
0690:  MOVWF  xCC
0692:  MOVLW  9E
0694:  MOVWF  xCD
0696:  MOVLW  40
0698:  MOVWF  xCE
069A:  MOVLW  5E
069C:  MOVWF  xCF
069E:  CLRF   xD0
06A0:  MOVLW  5A
06A2:  MOVWF  xD1
06A4:  MOVLW  C1
06A6:  MOVWF  xD2
06A8:  MOVLW  9A
06AA:  MOVWF  xD3
06AC:  MOVLW  81
06AE:  MOVWF  xD4
06B0:  MOVLW  9B
06B2:  MOVWF  xD5
06B4:  MOVLW  40
06B6:  MOVWF  xD6
06B8:  MOVLW  5B
06BA:  MOVWF  xD7
06BC:  MOVLW  01
06BE:  MOVWF  xD8
06C0:  MOVLW  99
06C2:  MOVWF  xD9
06C4:  MOVLW  C0
06C6:  MOVWF  xDA
06C8:  MOVLW  59
06CA:  MOVWF  xDB
06CC:  MOVLW  80
06CE:  MOVWF  xDC
06D0:  MOVLW  58
06D2:  MOVWF  xDD
06D4:  MOVLW  41
06D6:  MOVWF  xDE
06D8:  MOVLW  98
06DA:  MOVWF  xDF
06DC:  MOVLW  01
06DE:  MOVWF  xE0
06E0:  MOVLW  88
06E2:  MOVWF  xE1
06E4:  MOVLW  C0
06E6:  MOVWF  xE2
06E8:  MOVLW  48
06EA:  MOVWF  xE3
06EC:  MOVLW  80
06EE:  MOVWF  xE4
06F0:  MOVLW  49
06F2:  MOVWF  xE5
06F4:  MOVLW  41
06F6:  MOVWF  xE6
06F8:  MOVLW  89
06FA:  MOVWF  xE7
06FC:  CLRF   xE8
06FE:  MOVLW  4B
0700:  MOVWF  xE9
0702:  MOVLW  C1
0704:  MOVWF  xEA
0706:  MOVLW  8B
0708:  MOVWF  xEB
070A:  MOVLW  81
070C:  MOVWF  xEC
070E:  MOVLW  8A
0710:  MOVWF  xED
0712:  MOVLW  40
0714:  MOVWF  xEE
0716:  MOVLW  4A
0718:  MOVWF  xEF
071A:  CLRF   xF0
071C:  MOVLW  4E
071E:  MOVWF  xF1
0720:  MOVLW  C1
0722:  MOVWF  xF2
0724:  MOVLW  8E
0726:  MOVWF  xF3
0728:  MOVLW  81
072A:  MOVWF  xF4
072C:  MOVLW  8F
072E:  MOVWF  xF5
0730:  MOVLW  40
0732:  MOVWF  xF6
0734:  MOVLW  4F
0736:  MOVWF  xF7
0738:  MOVLW  01
073A:  MOVWF  xF8
073C:  MOVLW  8D
073E:  MOVWF  xF9
0740:  MOVLW  C0
0742:  MOVWF  xFA
0744:  MOVLW  4D
0746:  MOVWF  xFB
0748:  MOVLW  80
074A:  MOVWF  xFC
074C:  MOVLW  4C
074E:  MOVWF  xFD
0750:  MOVLW  41
0752:  MOVWF  xFE
0754:  MOVLW  8C
0756:  MOVWF  xFF
0758:  MOVLB  2
075A:  CLRF   x00
075C:  MOVLW  44
075E:  MOVWF  x01
0760:  MOVLW  C1
0762:  MOVWF  x02
0764:  MOVLW  84
0766:  MOVWF  x03
0768:  MOVLW  81
076A:  MOVWF  x04
076C:  MOVLW  85
076E:  MOVWF  x05
0770:  MOVLW  40
0772:  MOVWF  x06
0774:  MOVLW  45
0776:  MOVWF  x07
0778:  MOVLW  01
077A:  MOVWF  x08
077C:  MOVLW  87
077E:  MOVWF  x09
0780:  MOVLW  C0
0782:  MOVWF  x0A
0784:  MOVLW  47
0786:  MOVWF  x0B
0788:  MOVLW  80
078A:  MOVWF  x0C
078C:  MOVLW  46
078E:  MOVWF  x0D
0790:  MOVLW  41
0792:  MOVWF  x0E
0794:  MOVLW  86
0796:  MOVWF  x0F
0798:  MOVLW  01
079A:  MOVWF  x10
079C:  MOVLW  82
079E:  MOVWF  x11
07A0:  MOVLW  C0
07A2:  MOVWF  x12
07A4:  MOVLW  42
07A6:  MOVWF  x13
07A8:  MOVLW  80
07AA:  MOVWF  x14
07AC:  MOVLW  43
07AE:  MOVWF  x15
07B0:  MOVLW  41
07B2:  MOVWF  x16
07B4:  MOVLW  83
07B6:  MOVWF  x17
07B8:  CLRF   x18
07BA:  MOVLW  41
07BC:  MOVWF  x19
07BE:  MOVLW  C1
07C0:  MOVWF  x1A
07C2:  MOVLW  81
07C4:  MOVWF  x1B
07C6:  MOVWF  x1C
07C8:  MOVLW  80
07CA:  MOVWF  x1D
07CC:  MOVLW  40
07CE:  MOVWF  x1E
07D0:  MOVWF  x1F
....................  
.................... 	int nTemp; 
.................... 	long wCRCWord = 0xFFFF; 
....................  
.................... 	while (wLength--) { 
*
07D6:  MOVFF  1F,03
07DA:  MOVF   1E,W
07DC:  BTFSC  FD8.2
07DE:  DECF   1F,F
07E0:  DECF   1E,F
07E2:  IORWF  03,W
07E4:  BZ    082C
.................... 		nTemp = *nData++ ^ wCRCWord; 
07E6:  MOVFF  1D,03
07EA:  MOVF   1C,W
07EC:  INCF   1C,F
07EE:  BTFSC  FD8.2
07F0:  INCF   1D,F
07F2:  MOVWF  FE9
07F4:  MOVFF  03,FEA
07F8:  MOVF   FEF,W
07FA:  XORWF  x21,W
07FC:  MOVWF  x20
.................... 		wCRCWord >>= 8; 
07FE:  MOVFF  222,221
0802:  CLRF   x22
.................... 		wCRCWord ^= wCRCTable[nTemp]; 
0804:  CLRF   03
0806:  MOVFF  220,02
080A:  BCF    FD8.0
080C:  RLCF   02,F
080E:  RLCF   03,F
0810:  MOVF   02,W
0812:  ADDLW  20
0814:  MOVWF  FE9
0816:  MOVLW  00
0818:  ADDWFC 03,W
081A:  MOVWF  FEA
081C:  MOVFF  FEC,03
0820:  MOVF   FED,F
0822:  MOVF   FEF,W
0824:  XORWF  x21,F
0826:  MOVF   03,W
0828:  XORWF  x22,F
082A:  BRA    07D6
.................... 	} 
....................  
.................... 	return wCRCWord; 
082C:  MOVFF  221,01
0830:  MOVFF  222,02
0834:  MOVLB  0
0836:  GOTO   08B4 (RETURN)
.................... } 
....................  
.................... int toInt(long in, short side) { 
....................  
.................... 	if (side) 
*
0004:  MOVF   1E,F
0006:  BZ    0012
.................... 		return (int) (in >> 8) & 0xFF; 
0008:  MOVF   1D,W
000A:  CLRF   03
000C:  MOVWF  01
000E:  BRA    0016
0010:  BRA    0016
.................... 	else 
.................... 		return (int) in & 0xFF; 
0012:  MOVFF  1C,01
0016:  RETURN 0
.................... } 
....................  
.................... int *make_read_request(int dev_addr, long from, long to) { 
....................  
.................... 	if (from >= to) 
*
083A:  MOVF   11,W
083C:  SUBWF  0F,W
083E:  BNC   0850
0840:  BNZ   0848
0842:  MOVF   10,W
0844:  SUBWF  0E,W
0846:  BNC   0850
.................... 		return -1; 
0848:  MOVLW  FF
084A:  MOVWF  01
084C:  MOVWF  02
084E:  BRA    0902
....................  
.................... 	static int pre_req[6]; 
....................  
.................... 	pre_req[0] = dev_addr; 
0850:  MOVFF  0D,04
.................... 	pre_req[1] = read_holding_registers; 
0854:  MOVLW  03
0856:  MOVWF  05
.................... 	pre_req[2] = toInt(from, high); 
0858:  MOVFF  0F,1D
085C:  MOVFF  0E,1C
0860:  MOVLW  01
0862:  MOVWF  1E
0864:  CALL   0004
0868:  MOVFF  01,06
.................... 	pre_req[3] = toInt(from, low); 
086C:  MOVFF  0F,1D
0870:  MOVFF  0E,1C
0874:  CLRF   1E
0876:  CALL   0004
087A:  MOVFF  01,07
.................... 	pre_req[4] = toInt(to, high); 
087E:  MOVFF  11,1D
0882:  MOVFF  10,1C
0886:  MOVLW  01
0888:  MOVWF  1E
088A:  CALL   0004
088E:  MOVFF  01,08
.................... 	pre_req[5] = toInt(to, low); 
0892:  MOVFF  11,1D
0896:  MOVFF  10,1C
089A:  CLRF   1E
089C:  CALL   0004
08A0:  MOVFF  01,09
....................  
.................... 	long crc = CRC16(pre_req, 6); 
.................... 	int req[8]; 
08A4:  CLRF   1D
08A6:  MOVLW  04
08A8:  MOVWF  1C
08AA:  CLRF   1F
08AC:  MOVLW  06
08AE:  MOVWF  1E
08B0:  GOTO   0018
08B4:  MOVFF  02,13
08B8:  MOVFF  01,12
....................  
.................... 	req[0] = pre_req[0]; 
08BC:  MOVFF  04,14
.................... 	req[1] = pre_req[1]; 
08C0:  MOVFF  05,15
.................... 	req[2] = pre_req[2]; 
08C4:  MOVFF  06,16
.................... 	req[3] = pre_req[3]; 
08C8:  MOVFF  07,17
.................... 	req[4] = pre_req[4]; 
08CC:  MOVFF  08,18
.................... 	req[5] = pre_req[5]; 
08D0:  MOVFF  09,19
.................... 	req[6] = toInt(crc, low); 
08D4:  MOVFF  13,1D
08D8:  MOVFF  12,1C
08DC:  CLRF   1E
08DE:  CALL   0004
08E2:  MOVFF  01,1A
.................... 	req[7] = toInt(crc, high); 
08E6:  MOVFF  13,1D
08EA:  MOVFF  12,1C
08EE:  MOVLW  01
08F0:  MOVWF  1E
08F2:  CALL   0004
08F6:  MOVFF  01,1B
....................  
.................... 	return req; 
08FA:  MOVLW  14
08FC:  MOVWF  01
08FE:  MOVLW  00
0900:  MOVWF  02
0902:  GOTO   09C6 (RETURN)
.................... } 
....................  
.................... int send_request(int *output) { 
.................... 	int i; 
.................... 	for (i = 0; i < request_size; ++i) 
*
094E:  CLRF   0F
0950:  MOVF   0F,W
0952:  SUBLW  07
0954:  BNC   0972
.................... 		putc(output[i]); 
0956:  CLRF   03
0958:  MOVF   0F,W
095A:  ADDWF  0D,W
095C:  MOVWF  FE9
095E:  MOVF   0E,W
0960:  ADDWFC 03,W
0962:  MOVWF  FEA
0964:  MOVFF  FEF,10
0968:  MOVFF  10,11
096C:  BRA    0930
096E:  INCF   0F,F
0970:  BRA    0950
....................  
.................... 	return 0; 
0972:  MOVLW  00
0974:  MOVWF  01
0976:  GOTO   09E6 (RETURN)
.................... } 
....................  
....................  
.................... //int cont[8] = { 0x03, 0x03, 0x00, 0x00, 0x00, 0x0A, 0xC4, 0x2F }; 
.................... //int request[8]; 
.................... int *request; 
....................  
.................... int main(void) { 
097A:  CLRF   FF8
097C:  BCF    FD0.7
097E:  BCF    F94.5
0980:  BCF    F8B.5
0982:  BSF    FB8.3
0984:  MOVLW  81
0986:  MOVWF  FAF
0988:  MOVLW  00
098A:  MOVWF  FB0
098C:  MOVLW  A6
098E:  MOVWF  FAC
0990:  MOVLW  90
0992:  MOVWF  FAB
0994:  MOVLW  00
0996:  MOVWF  F7E
0998:  BCF    FC1.4
099A:  BCF    FC1.5
099C:  MOVF   F7F,W
099E:  ANDLW  E0
09A0:  MOVWF  F7F
09A2:  BCF    F79.5
09A4:  BCF    F79.4
09A6:  CLRF   F7A
09A8:  CLRF   F7B
09AA:  CLRF   04
09AC:  CLRF   05
09AE:  CLRF   06
09B0:  CLRF   07
09B2:  CLRF   08
09B4:  CLRF   09
....................  
.................... 	int i; 
....................  
.................... 	request = make_read_request(1, 0, 10); 
09B6:  MOVLW  01
09B8:  MOVWF  0D
09BA:  CLRF   0F
09BC:  CLRF   0E
09BE:  CLRF   11
09C0:  MOVLW  0A
09C2:  MOVWF  10
09C4:  BRA    083A
09C6:  MOVFF  02,0B
09CA:  MOVFF  01,0A
....................  
.................... 	while (TRUE) { 
....................  
.................... 		delay_ms(1000); 
09CE:  MOVLW  04
09D0:  MOVWF  0D
09D2:  MOVLW  FA
09D4:  MOVWF  0E
09D6:  BRA    0906
09D8:  DECFSZ 0D,F
09DA:  BRA    09D2
....................  
.................... 		send_request(request); 
09DC:  MOVFF  0B,0E
09E0:  MOVFF  0A,0D
09E4:  BRA    094E
09E6:  BRA    09CE
.................... 	} 
....................  
.................... 	return 0; 
09E8:  MOVLW  00
09EA:  MOVWF  01
.................... } 
09EC:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
