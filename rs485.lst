CCS PCH C Compiler, Version 5.008, 5967               03-dez-14 14:43

               Filename:   D:\Projetos\Modbus\rs485.lst

               ROM used:   980 bytes (3%)
                           Largest free fragment is 31788
               RAM used:   14 (1%) at main() level
                           36 (2%) worst case
               Stack used: 3 locations
               Stack size: 31

*
0000:  GOTO   0360
.................... /* 
....................  * rs485.c 
....................  * 
....................  *  Created on: 27/11/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include <18F45K20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
0004:  ADDLW  12
0006:  MOVWF  FF6
0008:  MOVLW  00
000A:  ADDWFC FF7,F
000C:  TBLRD*+
000E:  MOVF   FF5,W
0010:  RETURN 0
0012:  DATA 00,00
0014:  DATA C1,C0
0016:  DATA 81,C1
0018:  DATA 40,01
001A:  DATA 01,C3
001C:  DATA C0,03
001E:  DATA 80,02
0020:  DATA 41,C2
0022:  DATA 01,C6
0024:  DATA C0,06
0026:  DATA 80,07
0028:  DATA 41,C7
002A:  DATA 00,05
002C:  DATA C1,C5
002E:  DATA 81,C4
0030:  DATA 40,04
0032:  DATA 01,CC
0034:  DATA C0,0C
0036:  DATA 80,0D
0038:  DATA 41,CD
003A:  DATA 00,0F
003C:  DATA C1,CF
003E:  DATA 81,CE
0040:  DATA 40,0E
0042:  DATA 00,0A
0044:  DATA C1,CA
0046:  DATA 81,CB
0048:  DATA 40,0B
004A:  DATA 01,C9
004C:  DATA C0,09
004E:  DATA 80,08
0050:  DATA 41,C8
0052:  DATA 01,D8
0054:  DATA C0,18
0056:  DATA 80,19
0058:  DATA 41,D9
005A:  DATA 00,1B
005C:  DATA C1,DB
005E:  DATA 81,DA
0060:  DATA 40,1A
0062:  DATA 00,1E
0064:  DATA C1,DE
0066:  DATA 81,DF
0068:  DATA 40,1F
006A:  DATA 01,DD
006C:  DATA C0,1D
006E:  DATA 80,1C
0070:  DATA 41,DC
0072:  DATA 00,14
0074:  DATA C1,D4
0076:  DATA 81,D5
0078:  DATA 40,15
007A:  DATA 01,D7
007C:  DATA C0,17
007E:  DATA 80,16
0080:  DATA 41,D6
0082:  DATA 01,D2
0084:  DATA C0,12
0086:  DATA 80,13
0088:  DATA 41,D3
008A:  DATA 00,11
008C:  DATA C1,D1
008E:  DATA 81,D0
0090:  DATA 40,10
0092:  DATA 01,F0
0094:  DATA C0,30
0096:  DATA 80,31
0098:  DATA 41,F1
009A:  DATA 00,33
009C:  DATA C1,F3
009E:  DATA 81,F2
00A0:  DATA 40,32
00A2:  DATA 00,36
00A4:  DATA C1,F6
00A6:  DATA 81,F7
00A8:  DATA 40,37
00AA:  DATA 01,F5
00AC:  DATA C0,35
00AE:  DATA 80,34
00B0:  DATA 41,F4
00B2:  DATA 00,3C
00B4:  DATA C1,FC
00B6:  DATA 81,FD
00B8:  DATA 40,3D
00BA:  DATA 01,FF
00BC:  DATA C0,3F
00BE:  DATA 80,3E
00C0:  DATA 41,FE
00C2:  DATA 01,FA
00C4:  DATA C0,3A
00C6:  DATA 80,3B
00C8:  DATA 41,FB
00CA:  DATA 00,39
00CC:  DATA C1,F9
00CE:  DATA 81,F8
00D0:  DATA 40,38
00D2:  DATA 00,28
00D4:  DATA C1,E8
00D6:  DATA 81,E9
00D8:  DATA 40,29
00DA:  DATA 01,EB
00DC:  DATA C0,2B
00DE:  DATA 80,2A
00E0:  DATA 41,EA
00E2:  DATA 01,EE
00E4:  DATA C0,2E
00E6:  DATA 80,2F
00E8:  DATA 41,EF
00EA:  DATA 00,2D
00EC:  DATA C1,ED
00EE:  DATA 81,EC
00F0:  DATA 40,2C
00F2:  DATA 01,E4
00F4:  DATA C0,24
00F6:  DATA 80,25
00F8:  DATA 41,E5
00FA:  DATA 00,27
00FC:  DATA C1,E7
00FE:  DATA 81,E6
0100:  DATA 40,26
0102:  DATA 00,22
0104:  DATA C1,E2
0106:  DATA 81,E3
0108:  DATA 40,23
010A:  DATA 01,E1
010C:  DATA C0,21
010E:  DATA 80,20
0110:  DATA 41,E0
0112:  DATA 01,A0
0114:  DATA C0,60
0116:  DATA 80,61
0118:  DATA 41,A1
011A:  DATA 00,63
011C:  DATA C1,A3
011E:  DATA 81,A2
0120:  DATA 40,62
0122:  DATA 00,66
0124:  DATA C1,A6
0126:  DATA 81,A7
0128:  DATA 40,67
012A:  DATA 01,A5
012C:  DATA C0,65
012E:  DATA 80,64
0130:  DATA 41,A4
0132:  DATA 00,6C
0134:  DATA C1,AC
0136:  DATA 81,AD
0138:  DATA 40,6D
013A:  DATA 01,AF
013C:  DATA C0,6F
013E:  DATA 80,6E
0140:  DATA 41,AE
0142:  DATA 01,AA
0144:  DATA C0,6A
0146:  DATA 80,6B
0148:  DATA 41,AB
014A:  DATA 00,69
014C:  DATA C1,A9
014E:  DATA 81,A8
0150:  DATA 40,68
0152:  DATA 00,78
0154:  DATA C1,B8
0156:  DATA 81,B9
0158:  DATA 40,79
015A:  DATA 01,BB
015C:  DATA C0,7B
015E:  DATA 80,7A
0160:  DATA 41,BA
0162:  DATA 01,BE
0164:  DATA C0,7E
0166:  DATA 80,7F
0168:  DATA 41,BF
016A:  DATA 00,7D
016C:  DATA C1,BD
016E:  DATA 81,BC
0170:  DATA 40,7C
0172:  DATA 01,B4
0174:  DATA C0,74
0176:  DATA 80,75
0178:  DATA 41,B5
017A:  DATA 00,77
017C:  DATA C1,B7
017E:  DATA 81,B6
0180:  DATA 40,76
0182:  DATA 00,72
0184:  DATA C1,B2
0186:  DATA 81,B3
0188:  DATA 40,73
018A:  DATA 01,B1
018C:  DATA C0,71
018E:  DATA 80,70
0190:  DATA 41,B0
0192:  DATA 00,50
0194:  DATA C1,90
0196:  DATA 81,91
0198:  DATA 40,51
019A:  DATA 01,93
019C:  DATA C0,53
019E:  DATA 80,52
01A0:  DATA 41,92
01A2:  DATA 01,96
01A4:  DATA C0,56
01A6:  DATA 80,57
01A8:  DATA 41,97
01AA:  DATA 00,55
01AC:  DATA C1,95
01AE:  DATA 81,94
01B0:  DATA 40,54
01B2:  DATA 01,9C
01B4:  DATA C0,5C
01B6:  DATA 80,5D
01B8:  DATA 41,9D
01BA:  DATA 00,5F
01BC:  DATA C1,9F
01BE:  DATA 81,9E
01C0:  DATA 40,5E
01C2:  DATA 00,5A
01C4:  DATA C1,9A
01C6:  DATA 81,9B
01C8:  DATA 40,5B
01CA:  DATA 01,99
01CC:  DATA C0,59
01CE:  DATA 80,58
01D0:  DATA 41,98
01D2:  DATA 01,88
01D4:  DATA C0,48
01D6:  DATA 80,49
01D8:  DATA 41,89
01DA:  DATA 00,4B
01DC:  DATA C1,8B
01DE:  DATA 81,8A
01E0:  DATA 40,4A
01E2:  DATA 00,4E
01E4:  DATA C1,8E
01E6:  DATA 81,8F
01E8:  DATA 40,4F
01EA:  DATA 01,8D
01EC:  DATA C0,4D
01EE:  DATA 80,4C
01F0:  DATA 41,8C
01F2:  DATA 00,44
01F4:  DATA C1,84
01F6:  DATA 81,85
01F8:  DATA 40,45
01FA:  DATA 01,87
01FC:  DATA C0,47
01FE:  DATA 80,46
0200:  DATA 41,86
0202:  DATA 01,82
0204:  DATA C0,42
0206:  DATA 80,43
0208:  DATA 41,83
020A:  DATA 00,41
020C:  DATA C1,81
020E:  DATA 81,80
0210:  DATA 40,40
....................  
.................... #list 
....................  
....................  
.................... #fuses HS 
....................  
.................... #use delay(clock=10MHz) 
*
02EC:  CLRF   FEA
02EE:  MOVLW  0E
02F0:  MOVWF  FE9
02F2:  MOVF   FEF,W
02F4:  BZ    0312
02F6:  MOVLW  03
02F8:  MOVWF  01
02FA:  CLRF   00
02FC:  DECFSZ 00,F
02FE:  BRA    02FC
0300:  DECFSZ 01,F
0302:  BRA    02FA
0304:  MOVLW  3C
0306:  MOVWF  00
0308:  DECFSZ 00,F
030A:  BRA    0308
030C:  BRA    030E
030E:  DECFSZ FEF,F
0310:  BRA    02F6
0312:  GOTO   03BE (RETURN)
.................... #use rs232(xmit=PIN_C6, rcv=PIN_c7, enable=PIN_C5, baud=19200) 
0316:  BCF    F94.5
0318:  BSF    F8B.5
031A:  BTFSS  F9E.4
031C:  BRA    031A
031E:  MOVFF  11,FAD
0322:  NOP   
0324:  BCF    F94.5
0326:  BSF    F8B.5
0328:  BTFSS  FAC.1
032A:  BRA    0328
032C:  BCF    F94.5
032E:  BCF    F8B.5
0330:  GOTO   0354 (RETURN)
....................  
.................... #include "modbus.c" 
.................... /* 
....................  * modbus.c 
....................  * 
....................  *  Created on: 03/12/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #define read_coils					0x01 
.................... #define read_discrete_inputs		0x02 
.................... #define read_holding_registers		0x03 
.................... #define read_input_registers		0x04 
.................... #define write_single_coil			0x05 
.................... #define write_single_register		0x06 
.................... #define write_multiple_coils		0x0F 
.................... #define Write_multiple_registers	0x10 
....................  
.................... #define high	1 
.................... #define low		0 
....................  
.................... #define request_size	8 
....................  
.................... typedef struct req_str { 
.................... 	int addr; 
.................... 	int cmd; 
.................... 	long from; 
.................... 	long to; 
.................... 	long crc; 
.................... } req_type; 
....................  
.................... typedef union req_un { 
.................... 	req_type request; 
.................... 	int req_str[sizeof(req_type)]; 
.................... } req_un_type; 
....................  
.................... static const long wCRCTable[] = { 0X0000, 0XC0C1, 0XC181, 0X0140, 0XC301, 
.................... 		0X03C0, 0X0280, 0XC241, 0XC601, 0X06C0, 0X0780, 0XC741, 0X0500, 0XC5C1, 
.................... 		0XC481, 0X0440, 0XCC01, 0X0CC0, 0X0D80, 0XCD41, 0X0F00, 0XCFC1, 0XCE81, 
.................... 		0X0E40, 0X0A00, 0XCAC1, 0XCB81, 0X0B40, 0XC901, 0X09C0, 0X0880, 0XC841, 
.................... 		0XD801, 0X18C0, 0X1980, 0XD941, 0X1B00, 0XDBC1, 0XDA81, 0X1A40, 0X1E00, 
.................... 		0XDEC1, 0XDF81, 0X1F40, 0XDD01, 0X1DC0, 0X1C80, 0XDC41, 0X1400, 0XD4C1, 
.................... 		0XD581, 0X1540, 0XD701, 0X17C0, 0X1680, 0XD641, 0XD201, 0X12C0, 0X1380, 
.................... 		0XD341, 0X1100, 0XD1C1, 0XD081, 0X1040, 0XF001, 0X30C0, 0X3180, 0XF141, 
.................... 		0X3300, 0XF3C1, 0XF281, 0X3240, 0X3600, 0XF6C1, 0XF781, 0X3740, 0XF501, 
.................... 		0X35C0, 0X3480, 0XF441, 0X3C00, 0XFCC1, 0XFD81, 0X3D40, 0XFF01, 0X3FC0, 
.................... 		0X3E80, 0XFE41, 0XFA01, 0X3AC0, 0X3B80, 0XFB41, 0X3900, 0XF9C1, 0XF881, 
.................... 		0X3840, 0X2800, 0XE8C1, 0XE981, 0X2940, 0XEB01, 0X2BC0, 0X2A80, 0XEA41, 
.................... 		0XEE01, 0X2EC0, 0X2F80, 0XEF41, 0X2D00, 0XEDC1, 0XEC81, 0X2C40, 0XE401, 
.................... 		0X24C0, 0X2580, 0XE541, 0X2700, 0XE7C1, 0XE681, 0X2640, 0X2200, 0XE2C1, 
.................... 		0XE381, 0X2340, 0XE101, 0X21C0, 0X2080, 0XE041, 0XA001, 0X60C0, 0X6180, 
.................... 		0XA141, 0X6300, 0XA3C1, 0XA281, 0X6240, 0X6600, 0XA6C1, 0XA781, 0X6740, 
.................... 		0XA501, 0X65C0, 0X6480, 0XA441, 0X6C00, 0XACC1, 0XAD81, 0X6D40, 0XAF01, 
.................... 		0X6FC0, 0X6E80, 0XAE41, 0XAA01, 0X6AC0, 0X6B80, 0XAB41, 0X6900, 0XA9C1, 
.................... 		0XA881, 0X6840, 0X7800, 0XB8C1, 0XB981, 0X7940, 0XBB01, 0X7BC0, 0X7A80, 
.................... 		0XBA41, 0XBE01, 0X7EC0, 0X7F80, 0XBF41, 0X7D00, 0XBDC1, 0XBC81, 0X7C40, 
.................... 		0XB401, 0X74C0, 0X7580, 0XB541, 0X7700, 0XB7C1, 0XB681, 0X7640, 0X7200, 
.................... 		0XB2C1, 0XB381, 0X7340, 0XB101, 0X71C0, 0X7080, 0XB041, 0X5000, 0X90C1, 
.................... 		0X9181, 0X5140, 0X9301, 0X53C0, 0X5280, 0X9241, 0X9601, 0X56C0, 0X5780, 
.................... 		0X9741, 0X5500, 0X95C1, 0X9481, 0X5440, 0X9C01, 0X5CC0, 0X5D80, 0X9D41, 
.................... 		0X5F00, 0X9FC1, 0X9E81, 0X5E40, 0X5A00, 0X9AC1, 0X9B81, 0X5B40, 0X9901, 
.................... 		0X59C0, 0X5880, 0X9841, 0X8801, 0X48C0, 0X4980, 0X8941, 0X4B00, 0X8BC1, 
.................... 		0X8A81, 0X4A40, 0X4E00, 0X8EC1, 0X8F81, 0X4F40, 0X8D01, 0X4DC0, 0X4C80, 
.................... 		0X8C41, 0X4400, 0X84C1, 0X8581, 0X4540, 0X8701, 0X47C0, 0X4680, 0X8641, 
.................... 		0X8201, 0X42C0, 0X4380, 0X8341, 0X4100, 0X81C1, 0X8081, 0X4040 }; 
....................  
.................... long CRC16(int *nData, long wLength) { 
*
0212:  SETF   22
0214:  SETF   21
.................... 	int nTemp; 
.................... 	long wCRCWord = 0xFFFF; 
....................  
.................... 	while (wLength--) { 
0216:  MOVFF  1F,03
021A:  MOVF   1E,W
021C:  BTFSC  FD8.2
021E:  DECF   1F,F
0220:  DECF   1E,F
0222:  IORWF  03,W
0224:  BZ    0270
.................... 		nTemp = *nData++ ^ wCRCWord; 
0226:  MOVFF  1D,03
022A:  MOVF   1C,W
022C:  INCF   1C,F
022E:  BTFSC  FD8.2
0230:  INCF   1D,F
0232:  MOVWF  FE9
0234:  MOVFF  03,FEA
0238:  MOVF   FEF,W
023A:  XORWF  21,W
023C:  MOVWF  20
.................... 		wCRCWord >>= 8; 
023E:  MOVFF  22,21
0242:  CLRF   22
.................... 		wCRCWord ^= wCRCTable[nTemp]; 
0244:  CLRF   03
0246:  MOVFF  20,02
024A:  BCF    FD8.0
024C:  RLCF   02,F
024E:  RLCF   03,F
0250:  MOVF   02,W
0252:  MOVFF  FF2,23
0256:  BCF    FF2.7
0258:  MOVFF  03,FF7
025C:  RCALL  0004
025E:  TBLRD*+
0260:  MOVFF  FF5,03
0264:  BTFSC  23.7
0266:  BSF    FF2.7
0268:  XORWF  21,F
026A:  MOVF   03,W
026C:  XORWF  22,F
026E:  BRA    0216
.................... 	} 
....................  
.................... 	return wCRCWord; 
0270:  MOVFF  21,01
0274:  MOVFF  22,02
0278:  GOTO   02B8 (RETURN)
.................... } 
....................  
.................... int *make_read_request(int dev_addr, long from, long to) { 
....................  
.................... 	if (from >= to) 
027C:  MOVF   11,W
027E:  SUBWF  0F,W
0280:  BNC   0292
0282:  BNZ   028A
0284:  MOVF   10,W
0286:  SUBWF  0E,W
0288:  BNC   0292
.................... 		return -1; 
028A:  MOVLW  FF
028C:  MOVWF  01
028E:  MOVWF  02
0290:  BRA    02E8
....................  
.................... 	static int pre_req[6]; 
....................  
.................... 	pre_req[0] = dev_addr; 
0292:  MOVFF  0D,04
.................... 	pre_req[1] = read_holding_registers; 
0296:  MOVLW  03
0298:  MOVWF  05
.................... 	pre_req[2] = make8(from, 1); 
029A:  MOVFF  0F,06
.................... 	pre_req[3] = make8(from, 0); 
029E:  MOVFF  0E,07
.................... 	pre_req[4] = make8(to, 1); 
02A2:  MOVFF  11,08
.................... 	pre_req[5] = make8(to, 0); 
02A6:  MOVFF  10,09
....................  
.................... 	long crc = CRC16(pre_req, 6); 
.................... 	int req[8]; 
02AA:  CLRF   1D
02AC:  MOVLW  04
02AE:  MOVWF  1C
02B0:  CLRF   1F
02B2:  MOVLW  06
02B4:  MOVWF  1E
02B6:  BRA    0212
02B8:  MOVFF  02,13
02BC:  MOVFF  01,12
....................  
.................... 	req[0] = pre_req[0]; 
02C0:  MOVFF  04,14
.................... 	req[1] = pre_req[1]; 
02C4:  MOVFF  05,15
.................... 	req[2] = pre_req[2]; 
02C8:  MOVFF  06,16
.................... 	req[3] = pre_req[3]; 
02CC:  MOVFF  07,17
.................... 	req[4] = pre_req[4]; 
02D0:  MOVFF  08,18
.................... 	req[5] = pre_req[5]; 
02D4:  MOVFF  09,19
.................... 	req[6] = make8(crc, 0); 
02D8:  MOVFF  12,1A
.................... 	req[7] = make8(crc, 1); 
02DC:  MOVFF  13,1B
....................  
.................... 	return req; 
02E0:  MOVLW  14
02E2:  MOVWF  01
02E4:  MOVLW  00
02E6:  MOVWF  02
02E8:  GOTO   03AC (RETURN)
.................... } 
....................  
.................... int send_request(int *output) { 
.................... 	int i; 
.................... 	for (i = 0; i < request_size; ++i) 
*
0334:  CLRF   0F
0336:  MOVF   0F,W
0338:  SUBLW  07
033A:  BNC   0358
.................... 		putc(output[i]); 
033C:  CLRF   03
033E:  MOVF   0F,W
0340:  ADDWF  0D,W
0342:  MOVWF  FE9
0344:  MOVF   0E,W
0346:  ADDWFC 03,W
0348:  MOVWF  FEA
034A:  MOVFF  FEF,10
034E:  MOVFF  10,11
0352:  BRA    0316
0354:  INCF   0F,F
0356:  BRA    0336
....................  
.................... 	return 0; 
0358:  MOVLW  00
035A:  MOVWF  01
035C:  GOTO   03CC (RETURN)
.................... } 
....................  
....................  
.................... //int cont[8] = { 0x03, 0x03, 0x00, 0x00, 0x00, 0x0A, 0xC4, 0x2F }; 
.................... //int request[8]; 
.................... int *request; 
....................  
.................... int main(void) { 
0360:  CLRF   FF8
0362:  BCF    FD0.7
0364:  BCF    F94.5
0366:  BCF    F8B.5
0368:  BSF    FB8.3
036A:  MOVLW  81
036C:  MOVWF  FAF
036E:  MOVLW  00
0370:  MOVWF  FB0
0372:  MOVLW  A6
0374:  MOVWF  FAC
0376:  MOVLW  90
0378:  MOVWF  FAB
037A:  MOVLW  00
037C:  MOVWF  F7E
037E:  BCF    FC1.4
0380:  BCF    FC1.5
0382:  MOVF   F7F,W
0384:  ANDLW  E0
0386:  MOVWF  F7F
0388:  BCF    F79.5
038A:  BCF    F79.4
038C:  CLRF   F7A
038E:  CLRF   F7B
0390:  CLRF   04
0392:  CLRF   05
0394:  CLRF   06
0396:  CLRF   07
0398:  CLRF   08
039A:  CLRF   09
....................  
.................... 	int i; 
....................  
.................... 	request = make_read_request(1, 0, 10); 
039C:  MOVLW  01
039E:  MOVWF  0D
03A0:  CLRF   0F
03A2:  CLRF   0E
03A4:  CLRF   11
03A6:  MOVLW  0A
03A8:  MOVWF  10
03AA:  BRA    027C
03AC:  MOVFF  02,0B
03B0:  MOVFF  01,0A
....................  
.................... 	while (TRUE) { 
....................  
.................... 		delay_ms(1000); 
03B4:  MOVLW  04
03B6:  MOVWF  0D
03B8:  MOVLW  FA
03BA:  MOVWF  0E
03BC:  BRA    02EC
03BE:  DECFSZ 0D,F
03C0:  BRA    03B8
....................  
.................... 		send_request(request); 
03C2:  MOVFF  0B,0E
03C6:  MOVFF  0A,0D
03CA:  BRA    0334
03CC:  BRA    03B4
.................... 	} 
....................  
.................... 	return 0; 
03CE:  MOVLW  00
03D0:  MOVWF  01
.................... } 
03D2:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
